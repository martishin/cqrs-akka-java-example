akka {
  loglevel = INFO

  actor {
    allow-java-serialization = off

    # Define your custom serializer for Kotlinx
    serializers {
      # Define the Kotlinx serializer
      kotlin-json = "com.martishin.cqrsexample.serialization.KotlinxJsonSerializer"
    }

    serialization-bindings {
      # Bind the custom event and command classes to the Kotlinx serializer
      "com.martishin.cqrsexample.models.actors.Event" = kotlin-json
      "com.martishin.cqrsexample.models.actors.Command" = kotlin-json
    }
  }

  persistence {
    journal {
      plugin = "akka.persistence.cassandra.journal"
      auto-start-journals = ["akka.persistence.cassandra.journal"]
    }

    snapshot-store {
      plugin = "akka.persistence.cassandra.snapshot"
    }

    cassandra {
      datastax-java-driver-config = "datastax-java-driver"

      journal {
        keyspace-autocreate = true
        tables-autocreate = true
      }

      snapshot {
        keyspace-autocreate = true
        tables-autocreate = true
      }

      query {
        refresh-interval = 2s
      }

      events-by-tag {
        eventual-consistency-delay = 25ms
        flush-interval = 25ms
        pubsub-notification = on
      }
    }
  }

  projection.cassandra {

    session-config-path = "akka.projection.cassandra.session-config"

    session-config {
      session-provider = "akka.stream.alpakka.cassandra.DefaultSessionProvider"

      service-discovery {
        name = ""
        lookup-timeout = 1 s
      }

      session-dispatcher = "akka.actor.default-dispatcher"

      datastax-java-driver-config = "datastax-java-driver"
    }

    offset-store {
      keyspace = "akka_projection"
      table = "offset_store"
      management-table = "projection_management"
    }
  }
}
